apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-load-balancer
  namespace: k-scrape-nexus
  labels:
    app.kubernetes.io/name: k-scrape-nexus
    app.kubernetes.io/component: nginx-load-balancer
spec:
  replicas: 3  # High availability
  selector:
    matchLabels:
      app.kubernetes.io/name: k-scrape-nexus
      app.kubernetes.io/component: nginx-load-balancer
  template:
    metadata:
      labels:
        app.kubernetes.io/name: k-scrape-nexus
        app.kubernetes.io/component: nginx-load-balancer
    spec:
      containers:
      - name: nginx
        image: nginx:1.25-alpine
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        - name: https
          containerPort: 443
          protocol: TCP
        - name: health
          containerPort: 8080
          protocol: TCP
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: nginx-upstreams
          mountPath: /etc/nginx/conf.d/
        - name: cache-volume
          mountPath: /var/cache/nginx
        - name: logs-volume
          mountPath: /var/log/nginx
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 101
          capabilities:
            drop:
            - ALL
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-main-config
      - name: nginx-upstreams
        configMap:
          name: nginx-upstreams-config
      - name: cache-volume
        emptyDir: {}
      - name: logs-volume
        emptyDir: {}
      securityContext:
        fsGroup: 101
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: nginx-load-balancer
              topologyKey: kubernetes.io/hostname